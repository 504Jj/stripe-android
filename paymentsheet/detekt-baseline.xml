<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>EmptyDefaultConstructor:PaymentSheetAddPaymentMethodFragment.kt$PaymentSheetAddPaymentMethodFragment$()</ID>
    <ID>EmptyFunctionBlock:BottomSheetController.kt$BottomSheetController.&lt;no name provided>${ }</ID>
    <ID>EmptyFunctionBlock:PrimaryButtonAnimator.kt$PrimaryButtonAnimator.&lt;no name provided>${ }</ID>
    <ID>ForbiddenComment:PaymentOptionFactory.kt$PaymentOptionFactory$// TODO: Should use labelResource paymentMethodCreateParams or extension function</ID>
    <ID>FunctionOnlyReturningConstant:SupportedPaymentMethodTest.kt$SupportedPaymentMethodTest.PaymentIntentTestInput.Companion$fun toCsvHeader()</ID>
    <ID>FunctionOnlyReturningConstant:SupportedPaymentMethodTest.kt$SupportedPaymentMethodTest.TestOutput.Companion$fun toCsvHeader()</ID>
    <ID>LongMethod:AddressElementActivity.kt$AddressElementActivity$@OptIn(ExperimentalAnimationApi::class) override fun onCreate(savedInstanceState: Bundle?)</ID>
    <ID>LongMethod:AutocompleteScreen.kt$@Composable internal fun AutocompleteScreenUI(viewModel: AutocompleteViewModel)</ID>
    <ID>LongMethod:BaseAddPaymentMethodFragment.kt$BaseAddPaymentMethodFragment$@Composable internal fun AddPaymentMethod( showCheckboxFlow: MutableStateFlow&lt;Boolean> )</ID>
    <ID>LongMethod:BaseSheetActivity.kt$BaseSheetActivity$override fun onCreate(savedInstanceState: Bundle?)</ID>
    <ID>LongMethod:FormViewModelTest.kt$FormViewModelTest$@ExperimentalCoroutinesApi @Test fun `Verify params are set when element address fields are complete`()</ID>
    <ID>LongMethod:FormViewModelTest.kt$FormViewModelTest$@ExperimentalCoroutinesApi @Test fun `Verify params are set when required address fields are complete`()</ID>
    <ID>LongMethod:InputAddressScreen.kt$@Composable internal fun InputAddressScreen( injector: NonFallbackInjector )</ID>
    <ID>LongMethod:PaymentOptionFactory.kt$PaymentOptionFactory$fun create(selection: PaymentSelection): PaymentOption</ID>
    <ID>LongMethod:PaymentOptionsAdapter.kt$@Composable internal fun PaymentOptionUi( viewWidth: Dp, isSelected: Boolean, isEditing: Boolean, isEnabled: Boolean, iconRes: Int, @DrawableRes labelIcon: Int? = null, labelText: String = "", removePmDialogTitle: String = "", description: String, onRemoveListener: (() -> Unit)? = null, onRemoveAccessibilityDescription: String = "", onItemSelectedListener: (() -> Unit) )</ID>
    <ID>LongMethod:PaymentSheetActivity.kt$PaymentSheetActivity$override fun onCreate(savedInstanceState: Bundle?)</ID>
    <ID>LongMethod:PaymentSheetConfigurationKtx.kt$internal fun PaymentSheet.Appearance.parseAppearance()</ID>
    <ID>LongMethod:USBankAccountFormFragment.kt$USBankAccountFormFragment$@Composable private fun AccountDetailsForm( bankName: String?, last4: String?, saveForFutureUsage: Boolean )</ID>
    <ID>LongMethod:USBankAccountFormFragment.kt$USBankAccountFormFragment$override fun onCreateView( inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle? ): View</ID>
    <ID>LongMethod:USBankAccountFormViewModel.kt$USBankAccountFormViewModel$private fun attachFinancialAccountToIntent( clientSecret: ClientSecret, intentId: String, linkAccountId: String, bankName: String?, last4: String? )</ID>
    <ID>MagicNumber:AutocompleteScreen.kt$0.07f</ID>
    <ID>MagicNumber:GooglePayButton.kt$GooglePayButton$0.5f</ID>
    <ID>MagicNumber:PaymentMethodsUI.kt$0.6F</ID>
    <ID>MagicNumber:PaymentOptionsAdapter.kt$0.6F</ID>
    <ID>MagicNumber:PaymentOptionsAdapter.kt$18</ID>
    <ID>MagicNumber:PaymentOptionsAdapter.kt$9</ID>
    <ID>MagicNumber:PaymentOptionsAdapter.kt$PaymentOptionsAdapter.Companion$100</ID>
    <ID>MagicNumber:PrimaryButton.kt$PrimaryButton$0.5f</ID>
    <ID>MagicNumber:USBankAccountFormFragment.kt$USBankAccountFormFragment$0.5f</ID>
    <ID>MaxLineLength:PaymentSheet.kt$PaymentSheet.Address$*</ID>
    <ID>MaxLineLength:PaymentSheet.kt$PaymentSheet.BillingDetails$*</ID>
    <ID>MaxLineLength:PaymentSheet.kt$PaymentSheet.Configuration$*</ID>
    <ID>MaxLineLength:PaymentSheet.kt$PaymentSheet.GooglePayConfiguration$*</ID>
    <ID>NestedBlockDepth:SupportedPaymentMethodTest.kt$SupportedPaymentMethodTest$private fun generatePaymentIntentScenarios(): List&lt;PaymentIntentTestInput></ID>
    <ID>ReturnCount:AddressUtils.kt$internal fun CharSequence.levenshtein(other: CharSequence): Int</ID>
    <ID>ThrowsCount:PaymentSheetConfigurationKtx.kt$internal fun PaymentSheet.Configuration.validate()</ID>
    <ID>TooManyFunctions:PaymentOption.kt$DelegateDrawable : Drawable</ID>
    <ID>TooManyFunctions:PaymentSheetViewModel.kt$PaymentSheetViewModel : BaseSheetViewModel</ID>
    <ID>UnnecessaryAbstractClass:PaymentSheetCommonModule.kt$PaymentSheetCommonModule$PaymentSheetCommonModule</ID>
    <ID>UnnecessaryAbstractClass:PaymentSheetLauncherModule.kt$PaymentSheetLauncherModule$PaymentSheetLauncherModule</ID>
    <ID>UnusedPrivateClass:PaymentOptionsViewModelTest.kt$PaymentOptionsViewModelTest$MyHostActivity : AppCompatActivity</ID>
    <ID>UnusedPrivateMember:BillingAddressViewTest.kt$BillingAddressViewTest.Companion$private val FRANCE = CountryCode.create("FR")</ID>
    <ID>UnusedPrivateMember:PaymentSheetAddPaymentMethodFragmentTest.kt$PaymentSheetAddPaymentMethodFragmentTest$private fun convertPixelsToDp(px: Int, resources: Resources): Dp</ID>
    <ID>VariableNaming:LinkHandler.kt$LinkHandler$@VisibleForTesting val _isLinkEnabled = MutableStateFlow(false)</ID>
    <ID>VariableNaming:PaymentOptionsViewModel.kt$PaymentOptionsViewModel$@VisibleForTesting internal val _paymentOptionResult = MutableLiveData&lt;PaymentOptionResult>()</ID>
  </CurrentIssues>
</SmellBaseline>
